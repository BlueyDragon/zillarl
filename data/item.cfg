/*******************************************************
/ item.cfg
/    by Bluey
/ This configuration file defines names, values, and properties of the items in Bigger is Better (ZillaRL).
/ http://www.forcastia.com | http://the-gain-girl.tumblr.com
/    Last updated on August 17, 2014
/    (c) 2014 Studio Draconis
*******************************************************/

/*
Item data used in the game is read from this CFG file. Item data is kept in structs, which are read into a
dictionary after the libtcod parser runs. The first keyword of the struct - in this case, "item", defines
the struct type, and the string afterward is the struct's name. Each individual item has several distinct
properties:

NAME is a string containing the item's name.
KIND is a string describing the item's type. This type defines the item's category and the glyph it will
	use. This type will also define the equip slot that the item will use, in the case of "suit" and "rune".
COL is a string in the format "RRR,GGG,BBB" which defines a libtcod color for the item's glyph.
DSC is a string containing the item's description.
BLOAT is an integer defining the item's fattening amount. (Food only)
RARITY is an integer defining the item's rarity level. Rarity can only be from 1 to 6, and items whose rarity is outside this range will not be randomly generated.
USEEFFECT is a string containing the name of a function. This function is called when the item is used.
	This property can be omitted if the item in question does not have a distinct use.
SLOT is a string defining the equip slot of the item. This value can only be either "suit" or "rune". (Equipment only)
*/

// CONSUMABLES - FOOD
// Food items can be eaten or drunk to increase Zilla's weight.
// Hamburger, Chicken, Pasta, Cake, Bread, Shrinkberry, Growberry, Toxic waste, Ice cream

item "banana" {
	name = "Banana"
	kind = "food"
	col = "255,255,0" // yellow
	dsc = "A distinctively-shaped yellow fruit, typically harvested in large bunches."
	bloat = 1
	rarity = 6
	useEffect = "genericEat"
}

item "apple" {
	name = "Apple"
	kind = "food"
	col = "255,0,0" // red
	dsc = "A ripe, juicy, red fruit."
	bloat = 1
	rarity = 6
	useEffect = "genericEat"
}

item "mango" {
	name = "Mango"
	kind = "food"
	col = "191,95,0" // dark_orange
	dsc = "A sweet, tropical fruit."
	bloat = 1
	rarity = 6
	useEffect = "genericEat"
}

item "pear" {
	name = "Pear"
	kind = "food"
	col = "115,255,115" // light_green
	dsc = "A ripe, juicy, green fruit."
	bloat = 1
	rarity = 6
	useEffect = "genericEat"
}

item "orange" {
	name = "Orange"
	kind = "food"
	col = "255,127,0" // orange
	dsc = "A juicy orange fruit."
	bloat = 1
	rarity = 6
	useEffect = "genericEat"
}

item "jug_milk" {
	name = "Jug of Milk"
	kind = "food"
	col = "255,255,255" // white
	dsc = "This auto-refrigerated container holds one gallon of fresh, creamy karsu-cow milk."
	bloat = 8
	rarity = 4
	useEffect = "genericDrink"
}

item "jug_apple_juice" {
	name = "Jug of Apple Juice"
	kind = "food"
	col = "255,255,115" // light_yellow
	dsc = "This auto-refrigerated container holds one gallon of apple juice."
	bloat = 8
	rarity = 4
	useEffect = "genericDrink"
}

item "jug_orange_juice" {
	name = "Jug of Orange Juice"
	kind = "food"
	col = "255,127,0" // orange
	dsc = "This auto-refrigerated container holds one gallon of orange juice."
	bloat = 8
	rarity = 4
	useEffect = "genericDrink"
}

item "bloatberry" {
	name = "Bloatberry"
	kind = "food"
	col = "191,0,255" // purple
	dsc = "This small purple berry has extraordinary fattening properties and contains several thousand"
		" more calories than similar-sized fruits."
	bloat = 6
	rarity = 5
	useEffect = "genericEat"
}

item "keg_cola" {
	name = "Keg of Cola"
	kind = "food"
	col = "0,0,0" // black
	dsc = "This large, silver keg contains fifteen gallons of cola."
	bloat = 120
	rarity = 2
	useEffect = "genericDrink"
}

item "barrel_cola" {
	name = "Barrel of Cola"
	kind = "food"
	col = "31,24,15" // darkest_sepia
	dsc = "This heavy shipping barrel contains thirty-one gallons of cola."
	bloat = 248
	rarity = 2
	useEffect = "genericDrink"
}

// CONSUMABLES - POTIONS
// Potions are one-use consumables with varied effects.

item "growth_potion_1" {
	name = "Potion of Minor Growth"
	kind = "potion"
	col = "255,0,0" // red
	dsc = "This potion is made from growberry extract and healing herbs. It rejuvenates"
		" the body and reverses the effects of shrinking."
	rarity = 5
	useEffect = "itemMinorGrow"
}

item "growth_potion_2" {
	name = "Potion of Major Growth"
	kind = "potion"
	col = "255,0,0" // red
	dsc = "This potion is made from growberry extract and potent herbs. It completely"
		" reverses the effects of shrinking and returns the user to full size."
	rarity = 3
	useEffect = "itemMinorGrow"
}

// EQUIPMENT - SUITS
// Suits are two-piece bikinis and other outfits Zilla can wear which grant her offensive and defensive
// bonuses.

// The Shifter Skivvies are Zilla's starting outfit and do not have equipment bonuses, nor are they 
// generated randomly.
item "zilla_bikini" {
	name = "Shifter Skivvies"
	kind = "suit"
	col = "191,0,255" // purple
	dsc = "A matching purple set of bra and panties, stretched and strained from constant shapeshifting."
	rarity = 0
}

item "floral_bikini" {
	name = "Floral Bikini"
	kind = "suit"
	col = "255,0,127" // pink
	dsc = "This purple two-piece bikini has a flower-shaped design."
	rarity = 6
	//dfn = 1
	//ratingBonuses = ["dfn:5", "atk:1"]
}

item "brawler_bikini" {
	name = "Brawler Bikini"
	kind = "suit"
	col = "255,0,0" // red
	dsc = "This red and white bikini resembles wrestler outfits and, using genetic triggers, imparts"
		" confidence and hand-to-hand combat knowledge."
	rarity = 4
}

item "chainmail_bikini" {
	name = "Chainmail Bikini"
	kind = "suit"
	col = "95,95,95" // dark_gray
	dsc = "An armored bikini made of interweaving metal rings. It provides a surprising amount of"
		" protection to the wearer."
	rarity = 4
}

item "ember_bikini" {
	name = "Ember Bikini"
	kind = "suit"
	col = "255,63,0" // flame
	dsc = "A flame-colored bikini that is warm to the touch."
	rarity = 4
}

item "nanoweave_bikini" {
	name = "Nanoweave Bikini"
	kind = "suit"
	col = "0,0,0" // black
	dsc = "This black two-piece bikini has red trim and comes with matching wristbands. It is made of"
		" strong nanofibers that stretch and shrink with the wearer."
	rarity = 2
}

item "silksteel_bikini" {
	name = "Silksteel Skivvies"
	kind = "suit"
	col = "0,128,0" // darker_green
	dsc = "This green two-piece bikini is skin-tight and extraordinarily durable."
	rarity = 2
}

item "neutronium_bikini" {
	name = "Neutronium Bikini"
	kind = "suit"
	col = "63,50,31" // darker_sepia
	dsc = "This brown bikini is fabricated from the material within stellar bodies. It requires immense"
		" strength to lift, let alone wear."
	rarity = 1
}

// EQUIPMENT - RUNES
// Runes are arcane markings placed onto Zilla's belly that grant her bonuses.

/*
A gallon weighs about eight pounds. A keg contains about fifteen gallons (120 pounds), and a barrel 
	contains about thirty-one gallons (248 pounds).

Rarity levels:
	6	Abundant
	5	Plentiful
	4	Common
	3	Uncommon
	2	Scarce
	1	Rare

Before the addition of data parsing, item templates were defined in the code as global, generic objects
which were added to lists separated by item types, and then generated using the code
	itemToPlace = copy.deepcopy(script.selectFromList(food))
	
An example is written here in case this system needs to be re-implemented for any reason.

I_POTION_MINORGROWTH = Object(0, 0, data.gPotion, "Potion of Minor Growth", libtcod.red, desc = data.DESC_POTION_MINORGROWTH, alwaysVisible = True,
	item = Item(useEffect = itemMinorGrow))

potions = [I_POTION_MINORGROWTH]
	
I_SHIFTER_SKIVVIES = Object(0, 0, data.gArmor, "Shifter Skivvies", libtcod.purple, desc = data.DESC_SHIFTER_SKIVVIES, alwaysVisible = True,
	equipment = Equipment(slot = "bikini"))
*/