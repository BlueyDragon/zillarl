/*******************************************************
/ monster.cfg
/    by Bluey
/ This configuration file defines names, values, and properties of the monsters in Bigger is Better (ZillaRL).
/ http://www.forcastia.com | http://the-gain-girl.tumblr.com
/    Last updated on August 17, 2014
/    (c) 2014 Studio Draconis
*******************************************************/

/*
Monster data used in the game is read from this CFG file. Monster data is kept in structs, which are read 
into a dictionary after the libtcod parser runs. The first keyword of the struct - in this case, "monster",
defines the struct type, and the string afterward is the struct's name. Each individual item has several
distinct properties:

NAME is a string containing the monster's name.
GLYPH is a char describing the monster's on-screen glyph.
COL is a string in the format "RRR,GGG,BBB" which defines a libtcod color for the monster's glyph.
DSC is a string containing the item's description.
TIER is an integer describing the monster's relative difficulty level, or tier. The monster's tier
	roughly defines the rarity of the monster. Tougher monsters belong in higher tiers.
HP is the monster's amount of health.
ATK is the monster's attack rating.
DFN is the monster's defense rating.
MIN is the minimum amount of damage the monster will do with a generic attack.
MAX is the maximum amount of damage the monster will do with a generic attack.
XP is the amount of experience the monster will yield to the player when it is defeated.
DEATHEFFECT is a string containing the name of a function that the monster will execute upon being defeated.
	deathEffect is not mandatory, and if it is omitted, the generic monsterDeath function will be used.
*/

// TIER ZERO MONSTERS

monster "newt" {
	name = "Newt"
	glyph = 'l'
	col = "0,0,255" // blue
	dsc = "A small aquatic amphibian lizard, prized by witches for polymorph practice."
	tier = 0
	hp = 8
	atk = 1
	dfn = 1
	min = 1
	max = 1
	xp = 20
}

monster "gecko" {
	name = "Gecko"
	glyph = 'l'
	col = "127,255,0" // chartreuse
	dsc = "A gecko."
	tier = 0
	hp = 8
	atk = 1
	dfn = 2
	min = 1
	max = 1
	xp = 25
}

monster "lizard" {
	name = "Lizard"
	glyph = 'l'
	col = "0,255,0" // green
	dsc = "A lizard."
	tier = 0
	hp = 12
	atk = 2
	dfn = 1
	min = 1
	max = 2
	xp = 25
}

monster "bellyimp" {
	name = "Bellyimp"
	glyph = 'b'
	col = "191,0,255" // purple
	dsc = "This small, chubby demon wisps around on tiny wings, playing tricks and causing trouble. They are particularly fond of force-feeding defenseless creatures."
	tier = 0
	hp = 10
	atk = 3
	dfn = 1
	min = 2
	max = 4
	xp = 50
}

monster "snake" {
	name = "Snake"
	glyph = 's'
	col = "0,0,0" // black
	dsc = "A snake."
	tier = 0
	hp = 8
	atk = 2
	dfn = 1
	min = 2
	max = 2
	xp = 30
}

monster "bellydemon" {
	name = "Bellydemon"
	glyph = 'b'
	col = "127,0,255" // violet
	dsc = "This horned, bloated behemoth has no legs and tiny wings unsuitable for carrying its weight."
	tier = 1
	hp = 40
	atk = 4
	dfn = 3
	min = 3
	max = 4
	xp = 200
}

monster "dire_charr" {
	name = "Dire Charr"
	glyph = 'c'
	col = "255,127,0" // orange
	dsc = "A large, feral salamander-like creature with a dark orange coloration."
	tier = 1
	hp = 18
	atk = 4
	dfn = 2
	min = 2
	max = 4
	xp = 160
}

monster "kangaroo" {
	name = "Kangaroo"
	glyph = 'k'
	col = "63,50,31" // darker_sepia
	dsc = "A kangaroo."
	tier = 1
	hp = 16
	atk = 2
	dfn = 2
	min = 2
	max = 4
	xp = 120
}

monster "alligator" {
	name = "Alligator"
	glyph = 'C'
	col = "0,255,0" // green
	dsc = "An alligator."
	tier = 1
	hp = 22
	atk = 3
	dfn = 3
	min = 3
	max = 4
	xp = 180
}

monster "crocodile" {
	name = "Crocodile"
	glyph = 'C'
	col = "0,128,0" // darker_green
	dsc = "A crocodile."
	tier = 1
	hp = 22
	atk = 3
	dfn = 3
	min = 2
	max = 4
	xp = 180
}

/*	
Glyph Guidelines:
	Bellything		b
	Charr			c
	Crocodilian		C
	Marsupial		k
	Lizard			l
	Snake			s

Bellymage, Bellylord, Shadow Charr, Naga
	
Before the addition of data parsing, monster templates were defined in the code as global, generic objects
which were added to lists separated by tiers, and then generated using the code
	monsterToPlace = copy.deepcopy(script.selectFromList(tierZeroMonsters))
	
An example is written here in case this system needs to be re-implemented for any reason.

M_BELLYDEMON = Object(0, 0, defs.gBellything, "Bellydemon", libtcod.violet, blocks = True,
	fighter = Fighter(hp = 40, aura = 0, atk = 4, dfn = 3, minDamage = 3, maxDamage = 4, xp = 200, deathEffect = monsterDeath),  
	ai = BasicMonster())
*/